<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Berk Selvi | Web Dev</title><link>https://berkselvi.dev/tr/posts/</link><description>Recent content in Posts on Berk Selvi | Web Dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Sat, 12 Mar 2022 11:29:25 +0300</lastBuildDate><atom:link href="https://berkselvi.dev/tr/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>400 satırlık türkçe kod yorumu 5 dakikada nasıl ingilizceye çevrilir? Bash Script kullanarak!</title><link>https://berkselvi.dev/tr/posts/400-sat%C4%B1rl%C4%B1k-t%C3%BCrk%C3%A7e-kod-yorumu-5-dakikada-nas%C4%B1l-ingilizceye-%C3%A7evrilir-bash-script-kullanarak/</link><pubDate>Sat, 12 Mar 2022 11:29:25 +0300</pubDate><guid>https://berkselvi.dev/tr/posts/400-sat%C4%B1rl%C4%B1k-t%C3%BCrk%C3%A7e-kod-yorumu-5-dakikada-nas%C4%B1l-ingilizceye-%C3%A7evrilir-bash-script-kullanarak/</guid><description>Bilgisayar mühendisi olmanın belkide en zevkli kısmı büyük zaman alıcak fakat nitelik gerektirmeyen basit işleri yazılım ile otomatize etmektir. Bu yazımda kısaca 400 satırlık türkçe kod yorumu içeren projemdeki yorumları nasıl ingilizceye çevirdiğimi anlatacağım.
Adı geçen CollegeHub servis projem yakında GitHub üzerinden public olarak yayınlanacak. Geliştirme aşamasında kolaylık olması açısından kendi ana dilim olan türkçeyle kodları yorumlamıştım, ancak prensip olarak yazılım kaynak dosyasında ingilizce dışında bir dil kullanmak istemiyorum 😁.</description><content>&lt;p>Bilgisayar mühendisi olmanın belkide en zevkli kısmı büyük zaman alıcak fakat nitelik gerektirmeyen basit işleri yazılım ile otomatize etmektir. Bu yazımda kısaca 400 satırlık türkçe kod yorumu içeren projemdeki yorumları nasıl ingilizceye çevirdiğimi anlatacağım.&lt;/p>
&lt;p>Adı geçen &lt;a href="https://github.com/college-hub">CollegeHub&lt;/a> servis projem yakında GitHub üzerinden public olarak yayınlanacak. Geliştirme aşamasında kolaylık olması açısından kendi ana dilim olan türkçeyle kodları yorumlamıştım, ancak prensip olarak yazılım kaynak dosyasında ingilizce dışında bir dil kullanmak istemiyorum 😁.&lt;/p>
&lt;h1 id="hemen-bunu-nasıl-yaptığıma-geçelim">Hemen bunu nasıl yaptığıma geçelim.&lt;/h1>
&lt;p>IDE olarak VSC kullanıyorum ve kodlarımıda C# ile yazdım. İlk olarak adımları teker teker açıklayalım ve ayrıntılarına göz atalım:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&amp;ldquo;//&amp;rdquo; içeren satırlardaki yorumları bir txt dosyasına kopyaladım.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Satır satır yorum içeren txt dosyasındaki içerikleri kopyalayıp Google Translate üzerinden makine çevirisi yaptım.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Her bir dosyanın çevirisini ayrı olarak dosya dosya ele aldım.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bash Script ile eşleşen kelimeleri ingilizceleri ile güncelledim.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="1-adım">1. Adım&lt;/h2>
&lt;p>&lt;code>Ctrl+D&lt;/code> ile bir dosyadaki tüm &amp;ldquo;//&amp;rdquo; içeren yorumları seçip, kopyalayıp &amp;ldquo;translate.tr.txt&amp;rdquo; dosyasına yapıştırdım. Daha sonra Yorum işaretlerini temizledim. Elime aşağıdaki gibi bir dosya oluştu. Bu şekilde çeviri yapacağım tüm dosyaların yorumlarını tek bir dosyada topladım.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span># translate.tr.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- AuthManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kayıt işleminden önce validasyon yapılır.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parola hashlenerek oluşturulur.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- CommentManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Verilen id ile Post döndürülür.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Post kontrol edilir.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span># translate.en.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- AuthManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Validation is done before registration.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>It is created by hashing the password.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- CommentManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Post is returned with the given id.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The post is checked.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-adım">2. Adım&lt;/h2>
&lt;p>bu dosyada &lt;code>Ctrl+A&lt;/code> ile hepsini seçip Google Translate üzerinden çeviri yaptım. Eğer bu txt dosyası çok uzunsa parça parçada bu çeviriyi yapabilirsiniz (ben öyle yaptım.).&lt;/p>
&lt;h2 id="3-adım">3. Adım&lt;/h2>
&lt;p>Bash script&amp;rsquo;i çalıştırmak için her bir kod dosyasının çevirilerini ve orjinal hallerini iki ayrı dosyada tuttum. Kaynak dosyaları ile aynı konumda aşağıdaki üç dosyayı oluşturmuş oldum.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- translate.AuthManager.en.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- translate.AuthManager.tr.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- replace.bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-adım">4. Adım&lt;/h2>
&lt;p>En heyecanlı kısım olan bash script yazma kısmındayız. Ben bir Bash Script gurusu kesinlikle değilim, yalnızca ihtiyacım olabilecek kısmını google sayesinde öğreniyorum fakat yakın gelecekte bu konuda kendimi dahada geliştirmeyi düşünüyorum çünkü Bash Script ile file system üzerinde çok büyük esneklik kazanıyorsunuz. Aşağıdaki kod parçasını basit olarak açıklarsak;&lt;/p>
&lt;p>İlk olarak dosya isimlerini içeren değişkenler tanımlanır, daha sonra &lt;code>tr&lt;/code> dosyası için while loop açılır (satır sayısı kadar döner), while içerisinde &lt;code>en&lt;/code> dosyasındaki eşlesen satırlar okunur (çevirilerin aynı satırlarda olmasına büyük dikkat gösterin.). Son olarakta &lt;code>sed&lt;/code> komudunu kullanarak eşlesen text&amp;rsquo;ler güncellenir.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Assign the filenames&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;AuthManager.cs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filenameTR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate.AuthManager.tr.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filenameEN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate.AuthManager.en.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># initalize while loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># reading each line&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> read line; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># assign tr file line-by-line to search variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>search&lt;span style="color:#f92672">=&lt;/span>$line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># assign en file line-by-line to replace variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>replace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>sed &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$n&lt;span style="color:#e6db74"> q;d&amp;#34;&lt;/span> $filenameEN&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># check if search and replace null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $search !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $replace !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># replace all matching texts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;s/&lt;/span>$search&lt;span style="color:#e6db74">/&lt;/span>$replace&lt;span style="color:#e6db74">/&amp;#34;&lt;/span> $filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>n+1&lt;span style="color:#66d9ef">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span> &amp;lt; $filenameTR
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="son-söz">Son söz&lt;/h2>
&lt;p>Vakit ayırdığınız için çok teşekkür ederim. Eğer bu içeriği değerli buluyorsanız kısa bir yorum ile belirtebilirsiniz. 🥳&lt;/p></content></item><item><title>Her Geliştiricinin Sahip Olması Gereken 5 Temel Felsefe</title><link>https://berkselvi.dev/tr/posts/her-geli%C5%9Ftiricinin-sahip-olmas%C4%B1-gereken-5-temel-felsefe/</link><pubDate>Wed, 09 Mar 2022 11:01:10 +0300</pubDate><guid>https://berkselvi.dev/tr/posts/her-geli%C5%9Ftiricinin-sahip-olmas%C4%B1-gereken-5-temel-felsefe/</guid><description>Ben şahsen yazılımın bir iş olmadan önce bir yaşam felsefesi olduğunu düşünüyorum ve bir yazılım geliştirici olarak hayatımdaki sorunların çoğuna bu şekilde yaklaşmaktan ve çözmekten büyük zevk alıyorum. Bu yazımda bu felsefenin temel taşlarından bahsedeceğim.
İçindekiler Sorumlu bir insan olun Kodunuzdaki hiçbir şeyi mahvetmeyin Mükemmeliyetçi olmayın Varlığınız, bilginizdir Topluluğunuzu geliştirin! Sorumlu bir insan olun Bir programcı olarak yazdığınız JavaScript kodunda bir hata varsa bu hatanın sebebinin C++ derleyicisi olduğunu söyleyemezsiniz.</description><content>&lt;p>Ben şahsen yazılımın bir iş olmadan önce bir yaşam felsefesi olduğunu düşünüyorum ve bir yazılım geliştirici olarak hayatımdaki sorunların çoğuna bu şekilde yaklaşmaktan ve çözmekten büyük zevk alıyorum. Bu yazımda bu felsefenin temel taşlarından bahsedeceğim.&lt;/p>
&lt;h2 id="içindekiler">İçindekiler&lt;/h2>
&lt;ul>
&lt;li>Sorumlu bir insan olun&lt;/li>
&lt;li>Kodunuzdaki hiçbir şeyi mahvetmeyin&lt;/li>
&lt;li>Mükemmeliyetçi olmayın&lt;/li>
&lt;li>Varlığınız, bilginizdir&lt;/li>
&lt;li>Topluluğunuzu geliştirin!&lt;/li>
&lt;/ul>
&lt;h2 id="sorumlu-bir-insan-olun">Sorumlu bir insan olun&lt;/h2>
&lt;p>Bir programcı olarak yazdığınız JavaScript kodunda bir hata varsa bu hatanın sebebinin C++ derleyicisi olduğunu söyleyemezsiniz. Bu kulağa saçma gelebilir, ancak bu durumu kendinize uyarlamayı düşünün!&lt;/p>
&lt;p>Bir işe girmeden önce, o işin gereksinimlerini iyi planlayın çünkü projede uzun bir yol kat ettiğinizde bu planlamayı yapamayacaksınızdır ve bir müşteriye veya patronunuza gittiğinizde size geçerli bir soru sorarlar, “neden yapmadınız”. Bunu daha önce düşünmedin mi” Eğer bir yanlışlık varsa ve açıklayacaksanız, her türlü soruya hazırlıklı olmanız iyi olur çünkü bu tür durumlardan kurtulmanıza yardımcı olabilir. Ancak vereceğiniz cevap kesinlikle “yapılması imkansız” bir şey olmamalıdır. O soruna uygun farklı çözüm alternatifleri sunmaya çalışmalısınız.&lt;/p>
&lt;h2 id="kodunuzdaki-hiçbir-şeyi-mahvetmeyin">Kodunuzdaki hiçbir şeyi mahvetmeyin&lt;/h2>
&lt;p>Yazılımı bir bina gibi düşünün, bir apartmanda bir pencere kırılır ve tamir edilmezse, bir başka pencere kırılırsa ve kimse umursamıyorsa, bu devam edecek ve sonunda duvarlarda grafitiler görünecek ve bina tamamen düzensizleşmeye başlayacaktır. Ek olarak; asla kırık bir bardakla yaşama. Yazılım için bu kırık cam örneği, kötü tasarım ve gelecekteki hatalara yol açabilecek zayıf bir kod olabilir.&lt;/p>
&lt;p>Aslında bu durum oldukça bilimseldir, fizikteki entropiyi düşünürseniz düzensizlik hep artmak ister. Buna izin vermemek senin elinde. Yazılımda bir hata varsa, yeni bir özellik eklemeden önce düzeltmeye odaklanın ve devam edin. Yapamazsınız demeyin, yaptım deyin.&lt;/p>
&lt;h2 id="mükemmeliyetçi-olmayın">Mükemmeliyetçi olmayın&lt;/h2>
&lt;p>Harika bir fikriniz varsa, bir veya iki yıl üzerinde çalıştıktan ve yayınladıktan sonra, geri bildirimlerden bunun gerçekten değersiz bir fikir olduğunu öğrenmek inanılmaz derecede hayal kırıklığı yaratabilir. Herhangi bir projede kusursuz ilerleme kaydetmeden önce, o projenin temel özelliklerine sahip bir MVP&amp;rsquo;ye sahip olmak ve onu yayınlamak, geri bildirimleri değerlendirmek ve her şey yolundaysa ilerlemeye devam etmek çok daha mantıklı olacaktır.&lt;/p>
&lt;p>Kısacası, mükemmeliyetçilik genellikle yazılımda işe yaramaz. Önce üründen emin olmak ve sonra onu mükemmelleştirmek daha iyi bir fikirdir. Sonuç olarak dünya her gün değişiyor ve her dakika yeni teknolojiler ve ürünler ortaya çıkıyor!&lt;/p>
&lt;h2 id="varlığınız-bilginizdir">Varlığınız, bilginizdir&lt;/h2>
&lt;p>Bilgi ve tecrübeniz en önemli varlığınızdır. Ancak bu varlıklar güncelliğini yitirmiş olabilir, özellikle teknoloji dünyasında her şey çok hızlı değişiyor. 1 yıl önce sahip olduğunuz değerli varlıklar artık değersiz olabilir. Bu yüzden güncel kalmaya odaklanmalısınız.&lt;/p>
&lt;p>Bir bilgi ve deneyim portföyünü yönetmek, finansal varlıkları yönetmek gibidir ve belirli gereksinimleri vardır;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ciddi yatırımcılar bir alışkanlık olarak düzenli yatırım yapar: Düzenli olarak yatırım yaparsanız, az da olsa çok da olsa, karşılığında toplamda çok büyük bir kâr elde edersiniz.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Çeşitlendirme, uzun vadeli başarının anahtarıdır: Ne kadar çok teknoloji ile rahat olursanız, değişime o kadar iyi uyum sağlayabilirsiniz.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Akıllı yatırımcılar, portföylerini düşük risk - düşük getiri ve yüksek risk - yüksek getiri yatırımları arasında dengeler: Varlığınızın tamamını (zaman ve emek) gelecekte değerli olacağını düşündüğünüz yüksek getirili bir varlığa yatırmak gelecekte değerli olabilir fakat olmayadabilir. Bunun yerine varlığınızı güvenli dallara ayırın ve varlığınızın tamamını aynı kutuya koymayın.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Yatırımcılar maksimum getiri için düşükten alıp yüksekten satmaya çalışırlar: Gelecekte değerleneceğini düşündüğünüz varlıklara yatırım yapmak büyük getiriler sağlayabilir.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Portföyler periyodik olarak gözden geçirilmeli ve yeniden dengelenmelidir: Çok değişken bir sektörde iş yapıyoruz, bu nedenle yatırımlarınızı düzenli olarak gözden geçirmeli ve değer kaybeden varlıklara dikkat etmelisiniz.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Ancak tüm bu hedeflerin en önemlisi ve vazgeçilmezi düzenli yatırım yapmaktır. Yatırım yapmazsanız, nereye yatırım yaptığınızın bir anlamı yoktur. İşte bu hedeflere ulaşmak için bir araç olarak kullanabileceğiniz birkaç yol:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Her yıl en az bir yeni dil öğrenin. Farklı diller aynı sorunları farklı şekillerde çözer. Birkaç farklı yaklaşımı öğrenmek, düşüncelerinizi genişletmenize ve bir rutine takılıp kalmamanıza yardımcı olabilir.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Her üç ayda bir teknik bir kitap okuyun. Alıştıktan sonra ayda bir kitap okuyun. Halihazırda kullanmakta olduğunuz teknolojilerde uzmanlaştıktan sonra, dallara ayrılın ve alanınızla ilgisiz bazı dallarda çalışın.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Teknik olmayan kitaplarda da okuyun. Bilgisayarlar insanlar içindir ve eğer insanları daha iyi anlayabilirseniz, onların çözümlerine çok daha iyi yaklaşabilirsiniz.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Yerel kullanıcı gruplarına katılın. Sadece gidip dinlemeyin, aktif olarak katılın. İzolasyon, kariyeriniz için ölümcül olabilir.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Bir projede öğreneceğiniz teknolojilerden herhangi birini kullanmış olmanız veya hatta özgeçmişinize eklemeniz önemli değil. Bunları öğrenmek öğrenme yeteneğinizi artıracak ve problem çözme yeteneğinize katkı sağlayacaktır.&lt;/p>
&lt;p>Bir problemle karşılaştığınızda ve cevabını bilmediğiniz zaman, onu bir hedef olarak seçin ve öğrenmeye çalışın. Bir guruya sorun, etrafınızda değilse çevrimiçi bir tane bulun. Bu hem sorunu çözecek hem de ağını genişletecektir. Sürekli öğrenmeye devam edin. Otobüste seyahat etmek gibi ölü anlarda okumak için bir şeyler taşıyın ve değerlendirin.&lt;/p>
&lt;p>Nasıl ki bir kitapçının size pazarladığı ürün, sahip olduğu en iyi ürün değil, sadece satmaya çalıştığı bir ürünse, arama motorlarında ilk gelen içeriğe güvenmeyin, doğruluğunu düşünün. ve zihninizde tartın ve asla sorgulamadan kabul etmeyin.&lt;/p>
&lt;h2 id="topluluğunuzu-geliştirin">Topluluğunuzu geliştirin!&lt;/h2>
&lt;p>Etkili iletişiminiz olmadığında iyi bir fikir yetimdir. Geliştiriciler olarak, son kullanıcılarla iletişim kurarken veya dokümantasyon oluştururken, patronlarımız veya üstlerimizle iletişim kurarken iletişim becerilerimizi kullanırız. İşte iletişim becerilerinizi güçlendirmenin birkaç yolu;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Bir programcı olarak göreviniz kelime oyunları oynamak değil, istediğiniz bilgiyi doğru ve anlaşılır bir şekilde iletmektir. Ne söylemek istediğini planla. Bir taslak yaz. Sonra kendine sor, &amp;ldquo;Bu, söylemeye çalıştığım her şeyi kapsıyor mu?&amp;rdquo; Bu gereksinimi karşılayana kadar tekrarlayın. Bu planı yalnızca bir belge yazarken değil, toplantılardan ve konuşmalardan önce, hatta önemsediğiniz müşterilerle görüşmeden önce yapın.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bilgi aktarabiliyorsanız, doğru iletişimi sağlayabilirsiniz. Bu nedenle, diğer kişinin karşılayabileceği bilgi düzeyini belirlemeniz gerekir.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>İletişimin çeşitli yolları vardır. Bazı müşteriler e-posta ile bilgilendirilmek isterken bazıları ise telefonla aranmak isteyebilir.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>İnsanlar tarafından dinlenmek istiyorsanız yapacağınız ilk şey onları dinlemek olacaktır. Bir toplantıyı diyaloğa dönüştürebilirseniz, sizden iyisi yoktur.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Size geri döneceğim, en kısa sürede cevap vereceğim diyerek insanları bekletmeyin.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="son-söz">Son söz&lt;/h2>
&lt;p>Sizlere aktarmaya çalıştığım bu bilgiler, kendi tecrübelerimin ve Pragmatic Programmer kitabının ilk bölümünün harmanlanması sonucu ortaya çıkmıştır. Eklemek veya düzeltmek istediğiniz bir şey varsa, yorumlarda belirtin ve bu bilgileri değerli buluyorsanız e-posta listesine abone olmalısınız. Zaman ayırdığınız için çok teşekkürler! 🥳&lt;/p></content></item><item><title>Bir şey nasıl çok iyi öğrenilir</title><link>https://berkselvi.dev/tr/posts/bir-%C5%9Fey-nas%C4%B1l-%C3%A7ok-iyi-%C3%B6%C4%9Frenilir/</link><pubDate>Wed, 09 Mar 2022 10:01:10 +0300</pubDate><guid>https://berkselvi.dev/tr/posts/bir-%C5%9Fey-nas%C4%B1l-%C3%A7ok-iyi-%C3%B6%C4%9Frenilir/</guid><description>Nasıl öğreneceğinizi öğrendiğinizde, bilgi ile dünyadaki hemen hemen tüm olasılıkların kilidini açarsınız. Bazılarınız pratiğin bilgiden daha önemli olduğunu düşünebilir, ama inanın bana, çalışma alanınız hakkında bir şey bilmiyorsanız, pratik yapamazsınız ve yapabilirseniz de işe yaramaz çünkü altta yatan süreçleri bilmiyorsunuzdur.
Bu kılavuz basit ve sonuç odaklıdır, bu harika kitapla konu hakkında daha fazla bilgi edinebilirsiniz.
Öğrenmeden önce Zihin sabit değildir ve geliştirilebilir, sadece zihin ve IQ değil, entelektüel beceriler de çalışarak geliştirilebilir.</description><content>&lt;p>Nasıl öğreneceğinizi öğrendiğinizde, bilgi ile dünyadaki hemen hemen tüm olasılıkların kilidini açarsınız. Bazılarınız pratiğin bilgiden daha önemli olduğunu düşünebilir, ama inanın bana, çalışma alanınız hakkında bir şey bilmiyorsanız, pratik yapamazsınız ve yapabilirseniz de işe yaramaz çünkü altta yatan süreçleri bilmiyorsunuzdur.&lt;/p>
&lt;p>Bu kılavuz basit ve sonuç odaklıdır, &lt;a href="https://www.goodreads.com/book/show/18770267-make-it-stick">bu harika kitapla&lt;/a> konu hakkında daha fazla bilgi edinebilirsiniz.&lt;/p>
&lt;h2 id="öğrenmeden-önce">Öğrenmeden önce&lt;/h2>
&lt;p>Zihin sabit değildir ve geliştirilebilir, sadece zihin ve IQ değil, entelektüel beceriler de çalışarak geliştirilebilir. Her şeyden önce sağlam bir öz disipline sahip olmalısınız, bu farklı şekillerde kazanılabilir, ancak kendi yolunuzu bulmalı ve izlemelisiniz. Dilerseniz askeri disiplin yöntemlerini takip edebilir, dilerseniz Uzakdoğu felsefelerine sadık kalabilirsiniz. Tamamen size kalmış.&lt;/p>
&lt;p>Ve unutmayın, para gibi değerli şeyler birikir. Buna bilgi de dahildir ve ne kadar çok yeni şeyler öğrenirseniz, yeni şeyleri öğrenmek ve anlamlandırmak o kadar kolay olur.&lt;/p>
&lt;p>## Öğrenmek değil&lt;/p>
&lt;p>Aynı konuyu tekrar tekrar çalışmak, aynı şeyleri tekrar tekrar okumak öğrenme hissi yaratabilir ama bu büyük ihtimalle yanlış bir duygudur. öğrenme duygusu ve akıcılık birbiriyle kolayca karıştırılabilir.&lt;/p>
&lt;p>Kendinizi test etmeden devam etmeyin, bu şekilde öğrendiğinizi düşünebilirsiniz, ancak büyük olasılıkla bu da yanlış bir duygu olacaktır.&lt;/p>
&lt;h2 id="yapılacak-şeyler">Yapılacak şeyler&lt;/h2>
&lt;p>Hafızadan hatırlama, tekrarlı okuma gibi yöntemlere göre çok daha harika bir yöntemdir. Makaleleri okurken cümlelerin veya paragrafların başında durun ve “Ana fikir nedir? Vermek istediğiniz mesaj nedir?” Bunun gibi sorular sormak, geri arama yöntemimiz için harika bir uygulamadır. Bu sayede öğrenilen konularla ilgili zihinsel bağlantılar güçlendirilecektir.&lt;/p>
&lt;p>Bölüm sonu soruları ve kendi oluşturduğunuz sorular harika öğrenme yöntemleridir. Burada quizlerde ve sınavlarda kullanılabilir, Quizleri bir öğrenme aracı olarak kullanmak tehlike açısından alışılmışın dışında olabilir, ancak hatırlama için çok iyi çalışır ve sorulara verdiğiniz cevaplar önemlidir. Eksiklerinizi bu şekilde ortaya koyabilirsiniz ve bu alanları tamamlamak sizi ileriye taşıyacaktır.&lt;/p>
&lt;p>Bu iki yöntem tamamen geri arama (callback) ile ilgilidir. Geri çağırma konusundaki son söz, ne kadar zorlayıcı olursa, etkilerinin o kadar kalıcı olacağıdır.&lt;/p>
&lt;p>Blok çalışmanın kısa vadeli faydalarını kullanmak yerine, konuya aralıklı çalışma ile yaklaşmak bilgiyi daha kalıcı hale getirecektir. Gerekli aralık, çalışılan konuya ve kişiye bağlıdır. 1 gün, 1 hafta, 1 ay gibi. Bir konuyu periyodik olarak hatırlamaya çalışmak, onu hafızada kalıcı kılar ve artık bir refleks gibi olur.&lt;/p>
&lt;p>Bir matematik konusuyla ilgili benzer soruları arka arkaya çözmek aşinalık hissi yaratır, ancak uygulama sırasında aynı konudaki diğer sorularla farklılıkları ve benzerlikleri görmenize yardımcı olmaz. Soruları çözerken soru tekrarı yaptığınızı fark ederseniz hemen farklı soru türlerine geçin.&lt;/p>
&lt;p>Öğrendiğiniz konuya yeni anlam katmanları eklemek detaylandırmadır. Buna bir örnek, bir konuyu not alırken kendi cümlelerinizle ifade etmek ve gerçek hayatla ilişkisini incelemektir. Yeni öğrenilen konunun daha önce öğrendiklerinizle ilişkisini incelemek öğrenmeyi artırır. Konuyu kendiniz ve hayatınız ile ilişkilendirin.&lt;/p>
&lt;p>Öğrenmeden önce üretin. Bir matematik sorusunu cevap verilmeden önce bildiklerinizle çözmeye çalışmak, çözüm anlatıldıktan sonra çözümü kavramanızı ve hatırlamanızı kolaylaştırır.&lt;/p>
&lt;p>Geri çağırma ve detaylandırmayı harmanlayın. Bir konu veya dersten sonra kendinize sorun, “Nasıl gitti? Daha iyi olabilir mi? Bu sana geçmişten bir şey hatırlatıyor mu?” Bunun gibi sorular sormak öğrenmeye yardımcı olur ve buna &lt;strong>yansıtma&lt;/strong> denir.&lt;/p>
&lt;hr>
&lt;h2 id="son-söz">Son söz&lt;/h2>
&lt;p>Sizlere aktarmaya çalıştığım bu bilgiler, kendi tecrübelerimin Make It Stick kitabıyla harmanlanması sonucu ortaya çıkmıştır. Eklemek veya düzeltmek istediğiniz bir şey varsa, yorumlarda belirtin ve bu bilgileri değerli buluyorsanız e-postaya abone olmalısınız. Zaman ayırdığınız için çok teşekkürler! 🥳&lt;/p></content></item></channel></rss>