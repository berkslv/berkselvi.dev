<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Berk Selvi | Web Dev</title><link>https://berkselvi.dev/</link><description>Recent content on Berk Selvi | Web Dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Sat, 12 Mar 2022 11:29:25 +0300</lastBuildDate><atom:link href="https://berkselvi.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>How to translate 400 lines of code comment to English in 5 minutes? Using Bash Scripts!</title><link>https://berkselvi.dev/posts/how-to-translate-400-lines-of-code-comment-to-english-in-5-minutes-using-bash-scripts/</link><pubDate>Sat, 12 Mar 2022 11:29:25 +0300</pubDate><guid>https://berkselvi.dev/posts/how-to-translate-400-lines-of-code-comment-to-english-in-5-minutes-using-bash-scripts/</guid><description>Perhaps the most enjoyable part of being a computer engineer is automating simple tasks that will take a lot of time but do not require qualifications. In this article, I will briefly explain how I translated the comments in my project, which includes 400 lines of Turkish code comments, into English.
My CollegeHub service project will be publicly released on GitHub very soon. I wrote the codes in Turkish, which is my native language, for convenience during the development phase, but in principle, I do not want to use a language other than English in the software source file üòÅ.</description><content>&lt;p>Perhaps the most enjoyable part of being a computer engineer is automating simple tasks that will take a lot of time but do not require qualifications. In this article, I will briefly explain how I translated the comments in my project, which includes 400 lines of Turkish code comments, into English.&lt;/p>
&lt;p>My &lt;a href="https://github.com/college-hub">CollegeHub&lt;/a> service project will be publicly released on GitHub very soon. I wrote the codes in Turkish, which is my native language, for convenience during the development phase, but in principle, I do not want to use a language other than English in the software source file üòÅ.&lt;/p>
&lt;h1 id="lets-jump-right-into-how-i-do-this">Let&amp;rsquo;s jump right into how I do this.&lt;/h1>
&lt;p>I use VSC as IDE and I wrote my codes in C#. First, let&amp;rsquo;s explain the steps one by one and take a look at the details:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>I copied the comments on lines containing &amp;ldquo;//&amp;rdquo; into a txt file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I copied the contents of the txt file containing line-by-line comments and made a machine translation using Google Translate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I handled the translation of each file separately, file by file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I updated the words matching the Bash Script with their English.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="step-1">Step 1&lt;/h2>
&lt;p>I selected all the comments containing &amp;ldquo;//&amp;rdquo; in a file with &lt;code>Ctrl+D&lt;/code>, copied and pasted them into the &amp;ldquo;translate.tr.txt&amp;rdquo; file. I then cleared the Comment marks. I have a file like below. In this way, I gathered the comments of all the files that I will translate in a single file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span># translate.tr.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- AuthManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kayƒ±t i≈üleminden √∂nce validasyon yapƒ±lƒ±r.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parola hashlenerek olu≈üturulur.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- CommentManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Verilen id ile Post d√∂nd√ºr√ºl√ºr.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Post kontrol edilir.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span># translate.en.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- AuthManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Validation is done before registration.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>It is created by hashing the password.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- CommentManager.cs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Post is returned with the given id.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The post is checked.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2">Step 2&lt;/h2>
&lt;p>In this file, I selected all of them with &lt;code>Ctrl+A&lt;/code> and translated them via Google Translate. If this txt file is too long, you can do this translation piece by piece (that&amp;rsquo;s how I did it.).&lt;/p>
&lt;h2 id="step-3">Step 3&lt;/h2>
&lt;p>To run the bash script, I kept the translations and original versions of each script files in two separate files. I have created the following three files in the same location as the source files.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- translate.AuthManager.en.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- translate.AuthManager.tr.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|- replace.bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-4">Step 4&lt;/h2>
&lt;p>We are at the most exciting part, bash script writing. I am definitely not a Bash Script guru, I only learn the part that I may need thanks to Google, but I plan to improve myself in this subject in the near future because with Bash Script you gain a lot of flexibility on the file system. If we explain the following piece of code simply;&lt;/p>
&lt;p>First, the variables containing the filenames are defined, then the while loop is opened for the file &lt;code>tr&lt;/code> (The loop repeats the number of rows.), while in the while the matching lines in the file &lt;code>en&lt;/code> are read (take care that the translations are on the same lines.). Finally, the matching texts are updated using the &lt;code>sed&lt;/code> command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Assign the filenames&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;AuthManager.cs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filenameTR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate.AuthManager.tr.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filenameEN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate.AuthManager.en.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># initalize while loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># reading each line&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> read line; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># assign tr file line-by-line to search variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>search&lt;span style="color:#f92672">=&lt;/span>$line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># assign en file line-by-line to replace variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>replace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>sed &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$n&lt;span style="color:#e6db74"> q;d&amp;#34;&lt;/span> $filenameEN&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># check if search and replace null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $search !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $replace !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># replace all matching texts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;s/&lt;/span>$search&lt;span style="color:#e6db74">/&lt;/span>$replace&lt;span style="color:#e6db74">/&amp;#34;&lt;/span> $filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>n+1&lt;span style="color:#66d9ef">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span> &amp;lt; $filenameTR
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="last-word">Last word&lt;/h2>
&lt;p>Thank you very much for your time. If you find this content valuable, you can specify it with a short comment. ü•≥&lt;/p></content></item><item><title>5 Core Philosophies That Every Developer Should Have</title><link>https://berkselvi.dev/posts/5-core-philosophies-that-every-developer-should-have/</link><pubDate>Wed, 09 Mar 2022 11:01:10 +0300</pubDate><guid>https://berkselvi.dev/posts/5-core-philosophies-that-every-developer-should-have/</guid><description>I myself think that software is a philosophy of life before it is a job, and I take great pleasure in approaching most of the problems in my life as a software developer and solving them that way. In this article, I will talk about the cornerstones of this philosophy.
Table of Contents Be a responsible person Don‚Äôt ruin anything in your code Don‚Äôt be a perfectionist Your asset is your knowledge Develop your community!</description><content>&lt;p>I myself think that software is a philosophy of life before it is a job, and I take great pleasure in approaching most of the problems in my life as a software developer and solving them that way. In this article, I will talk about the cornerstones of this philosophy.&lt;/p>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;ul>
&lt;li>Be a responsible person&lt;/li>
&lt;li>Don‚Äôt ruin anything in your code&lt;/li>
&lt;li>Don‚Äôt be a perfectionist&lt;/li>
&lt;li>Your asset is your knowledge&lt;/li>
&lt;li>Develop your community!&lt;/li>
&lt;/ul>
&lt;h2 id="be-a-responsible-person">Be a responsible person&lt;/h2>
&lt;p>As a programmer, if there is an error in the JavaScript code you write, you cannot say that the reason for this error is C++ compiler. This may sound a nonsense, but consider adapting this situation to yourself!&lt;/p>
&lt;p>Before you take a job, plan the requirements of that job well because that doesn‚Äôt happen when you‚Äôve come a long way in the project and when you go to a client or your boss they ask you a valid question, ‚Äúwhy didn‚Äôt you think of this before‚Äù If there‚Äôs a mistake and you‚Äôre going to explain it, be prepared for any questions It would be good because it can help you get out of such situations. But the answer you give should definitely not be something ‚Äúthat is impossible to do!‚Äù. You should try to offer different solution alternatives suitable for that problem.&lt;/p>
&lt;h2 id="dont-ruin-anything-in-your-code">Don‚Äôt ruin anything in your code&lt;/h2>
&lt;p>Think of software like a building, if a window in an apartment is broken and not repaired, if another window is broken and no one cares, this will continue and eventually graffiti will appear on the walls and the building will start to go completely disorganized. Later; never live with a broken glass. This example of broken glass for software can be bad design, and a poor code that can lead to future bugs.&lt;/p>
&lt;p>Actually this situation is quite scientific, if you think about entropy in physics, disorder always wants to increase. It is up to you to not allow this. If there is a bug in the software, focus on fixing it before adding a new feature and keep going.Don‚Äôt say you can‚Äôt do it, say you did.&lt;/p>
&lt;h2 id="dont-be-a-perfectionist">Don‚Äôt be a perfectionist&lt;/h2>
&lt;p>If you have a great idea, after a year or two of working on it and publishing it, it can be incredibly disappointing to learn from the feedback that it‚Äôs a really worthless idea. Before making flawless progress on any project, it makes much more sense to have an MVP with the core features of that project and release it, evaluate the feedback, and if all is well, keep moving forward.&lt;/p>
&lt;p>In short, perfectionism usually doesn‚Äôt work for software. It‚Äôs a better idea to be sure of the product first and then perfect it. As a result, the world is changing every day and new technologies and products are emerging every minute!&lt;/p>
&lt;h2 id="your-asset-is-your-knowledge">Your asset is your knowledge&lt;/h2>
&lt;p>Your knowledge and experience is your most important asset. But these assets may be out of date, especially in the world of technology, everything is changing very quickly. The valuable assets you owned 1 year ago may now be worthless. That‚Äôs why you should focus on staying up to date.&lt;/p>
&lt;p>Managing a portfolio of knowledge and experience is like managing financial assets and has certain requirements;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Serious investors invest regularly as a habit: if you invest regularly, whether you make a little or a lot, you will get a huge profit in total in return.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Diversification is the key to long-term success: The more technology you are comfortable with, the better you can adapt to change.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Smart investors balance their portfolios between low risk, low return and high risk, high return investments: Investing your entire asset (time and effort) in a high return asset that you think will be valuable in the future. Instead, branch your entity into secure branches and don‚Äôt put your entire entity in the same box.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Investors try to buy low and sell high for maximum returns: investing in assets that you think will appreciate in the future can yield big returns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Portfolios should be reviewed and rebalanced periodically: We do business in a highly volatile industry, so you should regularly review your investments and watch out for depreciating assets.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>But the most important and indispensable of all these goals is to invest regularly. If you don‚Äôt invest, it doesn‚Äôt make any sense where you invest. Here are a few tools you can use as a tool to achieve these goals.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Learn at least one new language every year. Different languages ‚Äã‚Äãsolve the same problems in different ways. Learning a few different approaches can help broaden your thinking and avoid getting stuck in a routine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Read a technical book every quarter. Once you get used to it, read a book a month. Once you‚Äôve mastered the technologies you‚Äôre currently using, branch out and work on some unrelated branches.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Read in non-technical books either. Computers are for humans, and if you can understand humans better, you can approach their solutions much better.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Join local user groups. Don‚Äôt just go and listen, participate actively. Isolation can be fatal to your career.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>It doesn‚Äôt matter if you‚Äôve used any of the technologies you‚Äôll learn about in a project or even put it on your resume. Learning these will increase your learning ability and contribute to your problem solving ability.&lt;/p>
&lt;p>When you encounter a problem and you don‚Äôt know the answer to it, choose it as a goal and try to learn it. Ask a guru, if he isn‚Äôt around, find one online. This will both answer the problem and expand its network. Keep learning constantly. Carry and evaluate something to read in dead moments like traveling on the bus.&lt;/p>
&lt;p>Just as the product that a bookstore is marketing to you is not the best product it has, but a product it is only trying to sell, don‚Äôt rely on the content that comes first in search engines, think about its accuracy. and weigh it in your mind and never accept it without question.&lt;/p>
&lt;h2 id="develop-your-community">Develop your community!&lt;/h2>
&lt;p>A good idea is an orphan when you don‚Äôt have effective communication. As developers, we use our communication skills when communicating with end users or creating documentation, communicating with our bosses or superiors. Here are a few ways to strengthen your communication skills;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Your job as a programmer is not to play word games, but to convey the information you want accurately and clearly. Plan what you want to say. Write a draft. Then ask yourself, ‚ÄúDoes this encompass everything I‚Äôm trying to say?‚Äù Repeat until you meet this requirement. Make this plan not just when writing a document, but before meetings and speeches, even before meeting with clients you care about.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you can convey information, you can ensure correct communication. Therefore, you need to determine the level of knowledge that the other person can meet.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There are various ways of communication. Some customers may want to be informed by e-mail, while others may want to be called by phone.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you want to be listened to by people, the first thing you will do is listen to them. If you can turn a meeting into a dialogue, there‚Äôs no better than you.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don‚Äôt make people wait by saying I will get back to you, I will answer as soon as possible.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This information that I am trying to convey to you has emerged as a result of the blending of my own experiences and the first part of the Pragmatic Programmer book. If there is anything you would like to add or correct, mention it in the comments and you should subscribe to the email if you find this information valuable. Thanks so much for your time! ü•≥&lt;/p></content></item><item><title>How to learn something very well</title><link>https://berkselvi.dev/posts/how-to-learn-something-very-well/</link><pubDate>Wed, 09 Mar 2022 10:01:10 +0300</pubDate><guid>https://berkselvi.dev/posts/how-to-learn-something-very-well/</guid><description>When you learn how to learn, you unlock almost all the possibilities in the world with knowledge. Some of you can think practice more important than knowledge, but trust me, if you don‚Äôt know something about your working area, you won‚Äôt get practice, and if you can, it won‚Äôt work, because you don‚Äôt know the underlying processes.
This guide is simple and results oriented, you can learn more about it with this great book.</description><content>&lt;p>When you learn how to learn, you unlock almost all the possibilities in the world with knowledge. Some of you can think practice more important than knowledge, but trust me, if you don‚Äôt know something about your working area, you won‚Äôt get practice, and if you can, it won‚Äôt work, because you don‚Äôt know the underlying processes.&lt;/p>
&lt;p>This guide is simple and results oriented, you can learn more about it with &lt;a href="https://www.goodreads.com/book/show/18770267-make-it-stick">this great book&lt;/a>.&lt;/p>
&lt;h2 id="before-the-learning">Before the learning&lt;/h2>
&lt;p>Mind is not fixed and can be developed, not only mind and IQ, intellectual skills also be developed with working. First of all you must have iron-strong self discipline, this can be earned in different ways, but you must find and follow your own path. If you wish, you can follow the military discipline methods, or you can stay loyal to the Far East philosophies. It‚Äôs entirely up to you.&lt;/p>
&lt;p>And remember, valuable things like money accumulate. This includes knowledge, and the more you learn new things, the easier it is to learn and make sense of new things.&lt;/p>
&lt;h2 id="not-the-learning">Not the learning&lt;/h2>
&lt;p>Studying the same subject over and over, reading the same things over and over can create a sense of learning, but this is most likely a wrong feeling. sense of learning and fluency can easily be confused with each other.&lt;/p>
&lt;p>Don‚Äôt go ahead without testing yourself, you might think you learned that way, but most likely it also will be a false feeling.&lt;/p>
&lt;h2 id="things-to-do">Things to do&lt;/h2>
&lt;p>Recalling from memory is a much more wonderful method compared to methods such as repeated reading. When reading articles, pause at the beginning of sentences or paragraphs and ask, ‚ÄúWhat is the main idea? What is the message you want to give?‚Äù asking questions like this is a great practice for our callback method. In this way, mental connections related to the subjects learned will be strengthened.&lt;/p>
&lt;p>End-of-chapter questions and self-created questions are great learning methods. It can be used here in quizzes and exams, Using Quizzes as a learning tool may be unorthodox in terms of danger, but works very well for recall and your answers to the questions are important. You can reveal your shortcomings in this way and completing these areas will move you forward.&lt;/p>
&lt;p>These two methods are all about callback. The final word on the recall is that the more challenging, the more permanent its effects will be.&lt;/p>
&lt;p>Instead of using the short-term benefits of block work, approaching the subject with intermittent work will make the knowledge more permanent. The required range depends on the subject and person being studied. Like 1 day, 1 week, 1 month. Trying to remember a subject periodically makes it permanent in the memory and now it becomes like a reflex.&lt;/p>
&lt;p>Solving similar questions on a math topic one after another creates a feeling of familiarity, but it does not help you see the differences and similarities with other questions on the same topic at the time of practice. If you notice that you are repeating questions while solving questions, immediately switch to different types of questions.&lt;/p>
&lt;p>Adding new layers of meaning to the subject you are learning is elaboration. An example of this is expressing a topic in your own words while taking notes and examining its relationship with real life. Examining the relationship of the newly learned subject with what you have learned before increases learning. Relate the topic to yourself and your life.&lt;/p>
&lt;p>Produce before learning. Trying to solve a math question with what you know before the answer is given makes it easier for you to grasp and remember the solution after the solution is explained.&lt;/p>
&lt;p>Blend recall and detailing. After a topic or class, ask yourself, ‚ÄúHow did it go? Could it be better? Does this remind you of something from the past?‚Äù Asking questions like these helps learning, and this is called &lt;strong>reflection&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This information that I am trying to convey to you has emerged as a result of the blending of my own experiences and Make it Stick book. If there is anything you would like to add or correct, mention it in the comments and you should subscribe to the email if you find this information valuable. Thanks so much for your time! ü•≥&lt;/p></content></item><item><title>About</title><link>https://berkselvi.dev/about/</link><pubDate>Wed, 09 Mar 2022 09:45:53 +0300</pubDate><guid>https://berkselvi.dev/about/</guid><description>TL;DR Skillful in functional and OOP programming in JavaScript and C# languages. Talented in learning and applying new technologies, as evidenced by the projects he has developed. Responsible to the community, open source project developer and blog writer about what he learned. Technologies I use Programming Languages: C#, JavaScript, TypeScript Frameworks: React, React Native, .Net Core Databases: MySql, MongoDB Tools: Git, GitHub, Postman, Figma, Wordpress Projects CollegeHub :: Web-Mobil App :: link .</description><content>&lt;h1 id="tldr">TL;DR&lt;/h1>
&lt;ul>
&lt;li>Skillful in functional and OOP programming in JavaScript and C# languages.&lt;/li>
&lt;li>Talented in learning and applying new technologies, as evidenced by the projects he has developed.&lt;/li>
&lt;li>Responsible to the community, open source project developer and blog writer about what he learned.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="technologies-i-use">Technologies I use&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>Programming Languages:&lt;/strong> C#, JavaScript, TypeScript&lt;/li>
&lt;li>&lt;strong>Frameworks:&lt;/strong> React, React Native, .Net Core&lt;/li>
&lt;li>&lt;strong>Databases:&lt;/strong> MySql, MongoDB&lt;/li>
&lt;li>&lt;strong>Tools:&lt;/strong> Git, GitHub, Postman, Figma, Wordpress&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="projects">Projects&lt;/h1>
&lt;h4 id="collegehub--web-mobil-app---linkhttpsaboutcollegehubapp">CollegeHub :: Web-Mobil App :: &lt;a href="https://about.collegehub.app">link&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>.Net Core and MySql are used for the back-end, and React Native is used for the front-end.&lt;/li>
&lt;li>A web-mobile application that only university students can use, where they can message and share messages in groups or privately with students from their own and all other universities, faculties and departments, and view nearby places.&lt;/li>
&lt;/ul>
&lt;h4 id="algorithms--algorithm-applications---linkhttpsgithubcomberkslvalgorithms">Algorithms :: Algorithm applications :: &lt;a href="https://github.com/berkslv/algorithms">link&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>Contains algorithmic problems that I have solved using JavaScript, using various sources such as LeetCode, Project Euler.&lt;/li>
&lt;li>Currently contains 15+ algorithm solutions.&lt;/li>
&lt;/ul>
&lt;h4 id="pomodoro-app--mobil-uygulama--linkhttpsgithubcomberkslvpomodoro-app-with-react-native">Pomodoro App :: Mobil Uygulama :: &lt;a href="https://github.com/berkslv/pomodoro-app-with-react-native">link&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>A simple pomodoro counter for mobile&lt;/li>
&lt;li>React Native and Redux technologies were used. Although Redux is not exactly suitable for this problem, I used it to gain practice.&lt;/li>
&lt;/ul></content></item></channel></rss>